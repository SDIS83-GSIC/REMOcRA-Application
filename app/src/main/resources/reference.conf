remocra = {
  http = {
    port = 8881
    graceful-stop-time = 3000 // C'est la valeur par défaut de Jetty
    idle-timeout = 30000 // C'est la valeur par défaut de Jetty
    session-max-idle-time = 30 minutes
    session-cookie-name = "FITSID"
    temp-dir-prefix = remocra
    static-dir = "/opt/remocra/www"
    qos = {
      max-requests = 0 // C'est la valeur par défaut de Jetty
      max-suspended-requests = 1024 // C'est la valeur par défaut de Jetty
      max-suspend = 0 // C'est la valeur par défaut de Jetty
    }
    multipart = {
      temp-dir = "" // C'est la valeur par défaut de Jetty
      // max-file-size = -1 // C'est la valeur par défaut de Jetty
      // max-request-size = -1 // C'est la valeur par défaut de Jetty
      file-size-threshold = 0 // C'est la valeur par défaut de Jetty
    }
  }
  database = {
    // jOOQ
    sql-dialect = postgres
    // HikariCP
    dataSourceClassName = "org.postgresql.ds.PGSimpleDataSource"
    dataSource = {
      serverName = ${?POSTGRES_DB_HOSTNAME}
           databaseName = "remocra"
           databaseName = ${?POSTGRES_DB_NAME}
           user = "remocra"
           user = ${?POSTGRES_DB_USERNAME}
           password = ${?POSTGRES_DB_PASSWORD}
      //      prepStmtCacheSize=255
      //      prepStmtCacheSqlLimit=2048
      //      cachePrepStmts=true
    }
    leakDetectionThreshold = 5000
  }
  database-sig = {
    // HikariCP
    dataSourceClassName = ${?SIG_SQL_DIALECT}
    dataSource = {
      serverName = ${?SIG_HOSTNAME}
      databaseName =  ${?SIG_DBNAME}
      user = ${?SIG_USERNAME}
      password = ${?SIG_PASSWORD}
    }
  }
  authn {
    client-id: "remocra"
    client-id: ${?CLIENT_ID}
    client-secret: ${?CLIENT_SECRET}
    base-uri: ${?BASE_URI}
    realm: "remocra"
    realm: ${?REALM}
    token-introspection-cache-spec: "expireAfterAccess=10m, refreshAfterWrite=5m"
  }
  app {
    environment: "PRODUCTION"
    environment = ${?REMOCRA_ENVIRONMENT}
    codeSdis: ${?CODE_SDIS}
    epsg: {
      name: ${?EPSG_NAME},
      projection: ${?EPSG_PROJECTION}
    }
    nexsis {
        mock: false
        codeStructure: ${?CODE_STRUCTURE}
        enabled: false
        url: "http://nexsis.gouv.fr" // TODO on devrait n'en avoir qu'une pour tout le monde
        user: null
        password: null
    }
  }
  geoserver {
    url: ${?GEOSERVER_URL}
  }
  health {
    timeout: 30s
  }

  mail = {
    from = ${?SMTP_FROM}
    smtp-url = ${?SMTP_URL}
    smtp-port = ${?SMTP_PORT}
    smtp-user = ${?SMTP_USER}
    smtp-password = ${?SMTP_PASSWORD}
    url-site = ${?URL_SITE}
  }
  sentry = {
      log4j2 = {
        minimum-breadcrumb-level = off
        minimum-event-level = warn
      }
      java = {
        in-app-includes = ["remocra"]
        debug = false
        release = "remocra"
      }
    }
}
