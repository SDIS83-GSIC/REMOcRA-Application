[versions]
flyway = "10.17.3"
forbiddenapis = "3.7"
jooq = "3.19.11"
retrofit = "2.11.0"
geotools = "31.3"
jasperreports = "7.0.0"
sentry= "7.14.0"

# Versions utilis√©es par build-logic
javaToolchain = "21"
ktlint = "0.49.0"

[libraries]
log4j-bom = "org.apache.logging.log4j:log4j-bom:2.24.2"
log4j-core = { module = "org.apache.logging.log4j:log4j-core"}
log4j-jul = { module = "org.apache.logging.log4j:log4j-jul" }
guice-bom = "com.google.inject:guice-bom:7.0.0"
jetty-bom ="org.eclipse.jetty:jetty-bom:11.0.24"
jetty-servlet = { module = "org.eclipse.jetty:jetty-servlet" }
jetty-servlets = { module = "org.eclipse.jetty:jetty-servlets" }
junit-bom = "org.junit:junit-bom:5.11.0"
forbiddenapis = { module = "de.thetaphi:forbiddenapis", version.ref = "forbiddenapis" }

kotlin-guice = "dev.misfitlabs.kotlinguice4:kotlin-guice:3.0.0"
kotlinx-coroutines-core = "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.9.0"
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect" }

disruptor = "com.lmax:disruptor:4.0.0"
slf4j-api =  { module = "org.slf4j:slf4j-api", version = { strictly = "2.0.16" } }
log4j-slf4j2Impl = { module = "org.apache.logging.log4j:log4j-slf4j2-impl" }
typesafe = "com.typesafe:config:1.4.3"
postgresql = "org.postgresql:postgresql:42.7.4"
hikaricp = "com.zaxxer:HikariCP:5.1.0"
guava = "com.google.guava:guava:33.3.1-jre"
flyway-core = { module = "org.flywaydb:flyway-core", version.ref = "flyway" }
flyway-database-postgresql = { module = "org.flywaydb:flyway-database-postgresql", version.ref = "flyway" }
picocli = "info.picocli:picocli:4.7.6"

resteasy-core = { module = "org.jboss.resteasy:resteasy-core"}
resteasy-core-spi = { module =  "org.jboss.resteasy:resteasy-core-spi"}
resteasy-multipart-provider = { module = "org.jboss.resteasy:resteasy-multipart-provider"}
resteasy-bom = "org.jboss.resteasy:resteasy-bom:6.2.11.Final"

jooq-kotlin = { module = "org.jooq:jooq-kotlin", version.ref = "jooq" }
jooq-codegen = { module = "org.jooq:jooq-codegen", version.ref = "jooq" }

jackson-jakarta-rs-json-provider = "com.fasterxml.jackson.jakarta.rs:jackson-jakarta-rs-json-provider:2.9.6"
jackson-module-kotlin = "com.fasterxml.jackson.module:jackson-module-kotlin:2.17.2"
jackson-datatype-guava = "com.fasterxml.jackson.datatype:jackson-datatype-guava:2.17.2"
jackson-datatype-jdk8 = "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.17.2"
jackson-datatype-jsr310 = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.17.2"
jackson-dataformat-csv = "com.fasterxml.jackson.dataformat:jackson-dataformat-csv:2.17.2"

junit-jupiter-api = "org.junit.jupiter:junit-jupiter-api:5.11.0"
junit-jupiter-engine = "org.junit.jupiter:junit-jupiter-engine:5.11.0"

pac4j-oidc = "org.pac4j:pac4j-oidc:6.0.6"
jakartaee-pac4j = "org.pac4j:jakartaee-pac4j:8.0.1"
pac4j-jakartaee = "org.pac4j:pac4j-jakartaee:6.0.6"

commons-email = "org.apache.commons:commons-email:1.6.0"
#swagger-generator = "io.swagger:swagger-generator:2.4.41"
swagger-core = "io.swagger.core.v3:swagger-core-jakarta:2.2.27"
swagger-jaxrs = "io.swagger.core.v3:swagger-jaxrs2-jakarta:2.2.27"

geotools-gt-shapefile = { module = "org.geotools:gt-shapefile", version.ref = "geotools" }
geotools-gt-main = { module = "org.geotools:gt-main", version.ref = "geotools" }
geotools-gt-referencing = { module = "org.geotools:gt-referencing", version.ref = "geotools" }
geotools-gt-epsg = { module = "org.geotools:gt-epsg-hsql", version.ref = "geotools" }
locationtech-jts-core = "org.locationtech.jts:jts-core:1.20.0"

retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofit-converter-jackson = { module = "com.squareup.retrofit2:converter-jackson", version.ref = "retrofit" }

jasperreports =  { module = "net.sf.jasperreports:jasperreports", version.ref = "jasperreports" }
jasperreports-pdf = { module = "net.sf.jasperreports:jasperreports-pdf", version.ref = "jasperreports" }
jasperreports-fronts = { module = "net.sf.jasperreports:jasperreports-fonts", version.ref = "jasperreports" }

sentry = { module = "io.sentry:sentry", version.ref = "sentry" }
sentry-servlet-jakarta = { module = "io.sentry:sentry-servlet-jakarta", version.ref = "sentry" }
sentry-log4j2 = { module = "io.sentry:sentry-log4j2", version.ref = "sentry" }

archunit-junit5 = "com.tngtech.archunit:archunit-junit5:1.3.0"


[plugins]
cyclonedx = "org.cyclonedx.bom:1.7.4"
flyway = { id = "org.flywaydb.flyway", version.ref = "flyway" }
forbiddenapis = { id = "de.thetaphi.forbiddenapis", version.ref = "forbiddenapis" }
kotlin = "org.jetbrains.kotlin.jvm:2.0.20"
licensee = "app.cash.licensee:1.11.0"
loggingCapabilities = "dev.jacomet.logging-capabilities:0.11.1"
spotless = "com.diffplug.spotless:6.25.0"
