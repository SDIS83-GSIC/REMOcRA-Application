/*
 * This file is generated by jOOQ.
 */
package remocra.db.jooq.couverturehydraulique.tables.pojos

import org.locationtech.jts.geom.Geometry
import remocra.db.jooq.couverturehydraulique.enums.TypePeiProjet
import java.io.Serializable
import java.util.UUID
import javax.annotation.processing.Generated

/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.19.11",
    ],
    comments = "This class is generated by jOOQ",
)
@Suppress("UNCHECKED_CAST")
data class PeiProjet(
    val peiProjetId: UUID,
    val peiProjetEtudeId: UUID,
    val peiProjetNatureDeciId: UUID,
    val peiProjetTypePeiProjet: TypePeiProjet,
    val peiProjetDiametreId: UUID?,
    val peiProjetDiametreCanalisation: Int?,
    val peiProjetCapacite: Int?,
    val peiProjetDebit: Int?,
    val peiProjetGeometrie: Geometry,
) : Serializable {

    override fun equals(other: Any?): Boolean {
        if (this === other) {
            return true
        }
        if (other == null) {
            return false
        }
        if (this::class != other::class) {
            return false
        }
        val o: PeiProjet = other as PeiProjet
        if (this.peiProjetId != o.peiProjetId) {
            return false
        }
        if (this.peiProjetEtudeId != o.peiProjetEtudeId) {
            return false
        }
        if (this.peiProjetNatureDeciId != o.peiProjetNatureDeciId) {
            return false
        }
        if (this.peiProjetTypePeiProjet != o.peiProjetTypePeiProjet) {
            return false
        }
        if (this.peiProjetDiametreId == null) {
            if (o.peiProjetDiametreId != null) {
                return false
            }
        } else if (this.peiProjetDiametreId != o.peiProjetDiametreId) {
            return false
        }
        if (this.peiProjetDiametreCanalisation == null) {
            if (o.peiProjetDiametreCanalisation != null) {
                return false
            }
        } else if (this.peiProjetDiametreCanalisation != o.peiProjetDiametreCanalisation) {
            return false
        }
        if (this.peiProjetCapacite == null) {
            if (o.peiProjetCapacite != null) {
                return false
            }
        } else if (this.peiProjetCapacite != o.peiProjetCapacite) {
            return false
        }
        if (this.peiProjetDebit == null) {
            if (o.peiProjetDebit != null) {
                return false
            }
        } else if (this.peiProjetDebit != o.peiProjetDebit) {
            return false
        }
        if (this.peiProjetGeometrie != o.peiProjetGeometrie) {
            return false
        }
        return true
    }

    override fun hashCode(): Int {
        val prime = 31
        var result = 1
        result = prime * result + this.peiProjetId.hashCode()
        result = prime * result + this.peiProjetEtudeId.hashCode()
        result = prime * result + this.peiProjetNatureDeciId.hashCode()
        result = prime * result + this.peiProjetTypePeiProjet.hashCode()
        result = prime * result + (if (this.peiProjetDiametreId == null) 0 else this.peiProjetDiametreId.hashCode())
        result = prime * result + (if (this.peiProjetDiametreCanalisation == null) 0 else this.peiProjetDiametreCanalisation.hashCode())
        result = prime * result + (if (this.peiProjetCapacite == null) 0 else this.peiProjetCapacite.hashCode())
        result = prime * result + (if (this.peiProjetDebit == null) 0 else this.peiProjetDebit.hashCode())
        result = prime * result + this.peiProjetGeometrie.hashCode()
        return result
    }

    override fun toString(): String {
        val sb = StringBuilder("PeiProjet (")

        sb.append(peiProjetId)
        sb.append(", ").append(peiProjetEtudeId)
        sb.append(", ").append(peiProjetNatureDeciId)
        sb.append(", ").append(peiProjetTypePeiProjet)
        sb.append(", ").append(peiProjetDiametreId)
        sb.append(", ").append(peiProjetDiametreCanalisation)
        sb.append(", ").append(peiProjetCapacite)
        sb.append(", ").append(peiProjetDebit)
        sb.append(", ").append(peiProjetGeometrie)

        sb.append(")")
        return sb.toString()
    }
}
