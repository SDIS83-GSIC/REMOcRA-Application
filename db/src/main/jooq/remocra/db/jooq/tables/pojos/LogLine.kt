/*
 * This file is generated by jOOQ.
 */
package remocra.db.jooq.tables.pojos

import remocra.db.jooq.enums.LogLineGravity
import java.io.Serializable
import java.time.OffsetDateTime
import java.util.UUID
import javax.annotation.processing.Generated

/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.19.3",
    ],
    comments = "This class is generated by jOOQ",
)
@Suppress("UNCHECKED_CAST")
data class LogLine(
    val logLineId: UUID,
    val logLineJobId: UUID,
    val logLineGravity: LogLineGravity,
    val logLineDate: OffsetDateTime,
    val logLineObjectId: UUID?,
    val logLineMessage: String,
) : Serializable {

    override fun equals(other: Any?): Boolean {
        if (this === other) {
            return true
        }
        if (other == null) {
            return false
        }
        if (this::class != other::class) {
            return false
        }
        val o: LogLine = other as LogLine
        if (this.logLineId != o.logLineId) {
            return false
        }
        if (this.logLineJobId != o.logLineJobId) {
            return false
        }
        if (this.logLineGravity != o.logLineGravity) {
            return false
        }
        if (this.logLineDate != o.logLineDate) {
            return false
        }
        if (this.logLineObjectId == null) {
            if (o.logLineObjectId != null) {
                return false
            }
        } else if (this.logLineObjectId != o.logLineObjectId) {
            return false
        }
        if (this.logLineMessage != o.logLineMessage) {
            return false
        }
        return true
    }

    override fun hashCode(): Int {
        val prime = 31
        var result = 1
        result = prime * result + this.logLineId.hashCode()
        result = prime * result + this.logLineJobId.hashCode()
        result = prime * result + this.logLineGravity.hashCode()
        result = prime * result + this.logLineDate.hashCode()
        result = prime * result + (if (this.logLineObjectId == null) 0 else this.logLineObjectId.hashCode())
        result = prime * result + this.logLineMessage.hashCode()
        return result
    }

    override fun toString(): String {
        val sb = StringBuilder("LogLine (")

        sb.append(logLineId)
        sb.append(", ").append(logLineJobId)
        sb.append(", ").append(logLineGravity)
        sb.append(", ").append(logLineDate)
        sb.append(", ").append(logLineObjectId)
        sb.append(", ").append(logLineMessage)

        sb.append(")")
        return sb.toString()
    }
}
