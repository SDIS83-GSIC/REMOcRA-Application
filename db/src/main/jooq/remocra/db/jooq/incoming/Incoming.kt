/*
 * This file is generated by jOOQ.
 */
package remocra.db.jooq.incoming

import org.jooq.Catalog
import org.jooq.Table
import org.jooq.impl.SchemaImpl
import remocra.db.jooq.DefaultCatalog
import remocra.db.jooq.incoming.tables.Contact
import remocra.db.jooq.incoming.tables.Gestionnaire
import remocra.db.jooq.incoming.tables.LContactRole
import remocra.db.jooq.incoming.tables.LVisiteAnomalie
import remocra.db.jooq.incoming.tables.NewPei
import remocra.db.jooq.incoming.tables.PhotoPei
import remocra.db.jooq.incoming.tables.Tournee
import remocra.db.jooq.incoming.tables.Visite
import remocra.db.jooq.incoming.tables.VisiteCtrlDebitPression
import javax.annotation.processing.Generated
import kotlin.collections.List

/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.19.11",
    ],
    comments = "This class is generated by jOOQ",
)
@Suppress("UNCHECKED_CAST")
open class Incoming : SchemaImpl("incoming", DefaultCatalog.DEFAULT_CATALOG) {
    public companion object {

        /**
         * The reference instance of <code>incoming</code>
         */
        val INCOMING: Incoming = Incoming()
    }

    /**
     * The table <code>incoming.contact</code>.
     */
    val CONTACT: Contact get() = Contact.CONTACT

    /**
     * The table <code>incoming.gestionnaire</code>.
     */
    val GESTIONNAIRE: Gestionnaire get() = Gestionnaire.GESTIONNAIRE

    /**
     * The table <code>incoming.l_contact_role</code>.
     */
    val L_CONTACT_ROLE: LContactRole get() = LContactRole.L_CONTACT_ROLE

    /**
     * The table <code>incoming.l_visite_anomalie</code>.
     */
    val L_VISITE_ANOMALIE: LVisiteAnomalie get() = LVisiteAnomalie.L_VISITE_ANOMALIE

    /**
     * The table <code>incoming.new_pei</code>.
     */
    val NEW_PEI: NewPei get() = NewPei.NEW_PEI

    /**
     * The table <code>incoming.photo_pei</code>.
     */
    val PHOTO_PEI: PhotoPei get() = PhotoPei.PHOTO_PEI

    /**
     * The table <code>incoming.tournee</code>.
     */
    val TOURNEE: Tournee get() = Tournee.TOURNEE

    /**
     * The table <code>incoming.visite</code>.
     */
    val VISITE: Visite get() = Visite.VISITE

    /**
     * The table <code>incoming.visite_ctrl_debit_pression</code>.
     */
    val VISITE_CTRL_DEBIT_PRESSION: VisiteCtrlDebitPression get() = VisiteCtrlDebitPression.VISITE_CTRL_DEBIT_PRESSION

    override fun getCatalog(): Catalog = DefaultCatalog.DEFAULT_CATALOG

    override fun getTables(): List<Table<*>> = listOf(
        Contact.CONTACT,
        Gestionnaire.GESTIONNAIRE,
        LContactRole.L_CONTACT_ROLE,
        LVisiteAnomalie.L_VISITE_ANOMALIE,
        NewPei.NEW_PEI,
        PhotoPei.PHOTO_PEI,
        Tournee.TOURNEE,
        Visite.VISITE,
        VisiteCtrlDebitPression.VISITE_CTRL_DEBIT_PRESSION,
    )
}
