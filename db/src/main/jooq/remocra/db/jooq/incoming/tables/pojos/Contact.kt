/*
 * This file is generated by jOOQ.
 */
package remocra.db.jooq.incoming.tables.pojos

import remocra.db.jooq.remocra.enums.TypeCivilite
import java.io.Serializable
import java.util.UUID
import javax.annotation.processing.Generated

/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.19.11",
    ],
    comments = "This class is generated by jOOQ",
)
@Suppress("UNCHECKED_CAST")
data class Contact(
    val contactId: UUID,
    val gestionnaireId: UUID?,
    val contactActif: Boolean,
    val contactCivilite: TypeCivilite?,
    val contactFonctionContactId: UUID?,
    val contactNom: String?,
    val contactPrenom: String?,
    val contactNumeroVoie: String?,
    val contactSuffixeVoie: String?,
    val contactLieuDitText: String?,
    val contactLieuDitId: UUID?,
    val contactVoieText: String?,
    val contactVoieId: UUID?,
    val contactCodePostal: String?,
    val contactCommuneText: String?,
    val contactCommuneId: UUID?,
    val contactPays: String?,
    val contactTelephone: String?,
    val contactEmail: String?,
) : Serializable {

    override fun equals(other: Any?): Boolean {
        if (this === other) {
            return true
        }
        if (other == null) {
            return false
        }
        if (this::class != other::class) {
            return false
        }
        val o: Contact = other as Contact
        if (this.contactId != o.contactId) {
            return false
        }
        if (this.gestionnaireId == null) {
            if (o.gestionnaireId != null) {
                return false
            }
        } else if (this.gestionnaireId != o.gestionnaireId) {
            return false
        }
        if (this.contactActif != o.contactActif) {
            return false
        }
        if (this.contactCivilite == null) {
            if (o.contactCivilite != null) {
                return false
            }
        } else if (this.contactCivilite != o.contactCivilite) {
            return false
        }
        if (this.contactFonctionContactId == null) {
            if (o.contactFonctionContactId != null) {
                return false
            }
        } else if (this.contactFonctionContactId != o.contactFonctionContactId) {
            return false
        }
        if (this.contactNom == null) {
            if (o.contactNom != null) {
                return false
            }
        } else if (this.contactNom != o.contactNom) {
            return false
        }
        if (this.contactPrenom == null) {
            if (o.contactPrenom != null) {
                return false
            }
        } else if (this.contactPrenom != o.contactPrenom) {
            return false
        }
        if (this.contactNumeroVoie == null) {
            if (o.contactNumeroVoie != null) {
                return false
            }
        } else if (this.contactNumeroVoie != o.contactNumeroVoie) {
            return false
        }
        if (this.contactSuffixeVoie == null) {
            if (o.contactSuffixeVoie != null) {
                return false
            }
        } else if (this.contactSuffixeVoie != o.contactSuffixeVoie) {
            return false
        }
        if (this.contactLieuDitText == null) {
            if (o.contactLieuDitText != null) {
                return false
            }
        } else if (this.contactLieuDitText != o.contactLieuDitText) {
            return false
        }
        if (this.contactLieuDitId == null) {
            if (o.contactLieuDitId != null) {
                return false
            }
        } else if (this.contactLieuDitId != o.contactLieuDitId) {
            return false
        }
        if (this.contactVoieText == null) {
            if (o.contactVoieText != null) {
                return false
            }
        } else if (this.contactVoieText != o.contactVoieText) {
            return false
        }
        if (this.contactVoieId == null) {
            if (o.contactVoieId != null) {
                return false
            }
        } else if (this.contactVoieId != o.contactVoieId) {
            return false
        }
        if (this.contactCodePostal == null) {
            if (o.contactCodePostal != null) {
                return false
            }
        } else if (this.contactCodePostal != o.contactCodePostal) {
            return false
        }
        if (this.contactCommuneText == null) {
            if (o.contactCommuneText != null) {
                return false
            }
        } else if (this.contactCommuneText != o.contactCommuneText) {
            return false
        }
        if (this.contactCommuneId == null) {
            if (o.contactCommuneId != null) {
                return false
            }
        } else if (this.contactCommuneId != o.contactCommuneId) {
            return false
        }
        if (this.contactPays == null) {
            if (o.contactPays != null) {
                return false
            }
        } else if (this.contactPays != o.contactPays) {
            return false
        }
        if (this.contactTelephone == null) {
            if (o.contactTelephone != null) {
                return false
            }
        } else if (this.contactTelephone != o.contactTelephone) {
            return false
        }
        if (this.contactEmail == null) {
            if (o.contactEmail != null) {
                return false
            }
        } else if (this.contactEmail != o.contactEmail) {
            return false
        }
        return true
    }

    override fun hashCode(): Int {
        val prime = 31
        var result = 1
        result = prime * result + this.contactId.hashCode()
        result = prime * result + (if (this.gestionnaireId == null) 0 else this.gestionnaireId.hashCode())
        result = prime * result + this.contactActif.hashCode()
        result = prime * result + (if (this.contactCivilite == null) 0 else this.contactCivilite.hashCode())
        result = prime * result + (if (this.contactFonctionContactId == null) 0 else this.contactFonctionContactId.hashCode())
        result = prime * result + (if (this.contactNom == null) 0 else this.contactNom.hashCode())
        result = prime * result + (if (this.contactPrenom == null) 0 else this.contactPrenom.hashCode())
        result = prime * result + (if (this.contactNumeroVoie == null) 0 else this.contactNumeroVoie.hashCode())
        result = prime * result + (if (this.contactSuffixeVoie == null) 0 else this.contactSuffixeVoie.hashCode())
        result = prime * result + (if (this.contactLieuDitText == null) 0 else this.contactLieuDitText.hashCode())
        result = prime * result + (if (this.contactLieuDitId == null) 0 else this.contactLieuDitId.hashCode())
        result = prime * result + (if (this.contactVoieText == null) 0 else this.contactVoieText.hashCode())
        result = prime * result + (if (this.contactVoieId == null) 0 else this.contactVoieId.hashCode())
        result = prime * result + (if (this.contactCodePostal == null) 0 else this.contactCodePostal.hashCode())
        result = prime * result + (if (this.contactCommuneText == null) 0 else this.contactCommuneText.hashCode())
        result = prime * result + (if (this.contactCommuneId == null) 0 else this.contactCommuneId.hashCode())
        result = prime * result + (if (this.contactPays == null) 0 else this.contactPays.hashCode())
        result = prime * result + (if (this.contactTelephone == null) 0 else this.contactTelephone.hashCode())
        result = prime * result + (if (this.contactEmail == null) 0 else this.contactEmail.hashCode())
        return result
    }

    override fun toString(): String {
        val sb = StringBuilder("Contact (")

        sb.append(contactId)
        sb.append(", ").append(gestionnaireId)
        sb.append(", ").append(contactActif)
        sb.append(", ").append(contactCivilite)
        sb.append(", ").append(contactFonctionContactId)
        sb.append(", ").append(contactNom)
        sb.append(", ").append(contactPrenom)
        sb.append(", ").append(contactNumeroVoie)
        sb.append(", ").append(contactSuffixeVoie)
        sb.append(", ").append(contactLieuDitText)
        sb.append(", ").append(contactLieuDitId)
        sb.append(", ").append(contactVoieText)
        sb.append(", ").append(contactVoieId)
        sb.append(", ").append(contactCodePostal)
        sb.append(", ").append(contactCommuneText)
        sb.append(", ").append(contactCommuneId)
        sb.append(", ").append(contactPays)
        sb.append(", ").append(contactTelephone)
        sb.append(", ").append(contactEmail)

        sb.append(")")
        return sb.toString()
    }
}
