/*
 * This file is generated by jOOQ.
 */
package remocra.db.jooq.incoming.tables.pojos

import org.locationtech.jts.geom.Geometry
import remocra.db.jooq.remocra.enums.TypePei
import java.io.Serializable
import java.util.UUID
import javax.annotation.processing.Generated

/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.19.11",
    ],
    comments = "This class is generated by jOOQ",
)
@Suppress("UNCHECKED_CAST")
data class NewPei(
    val newPeiId: UUID,
    val newPeiTypePei: TypePei,
    val newPeiVoieId: UUID?,
    val newPeiGeometrie: Geometry,
    val newPeiLieuDitId: UUID?,
    val newPeiObservation: String?,
    val newPeiCommuneId: UUID,
    val newPeiNatureId: UUID,
    val newPeiNatureDeciId: UUID,
    val newPeiGestionnaireId: UUID?,
    val newPeiDomaineId: UUID,
) : Serializable {

    override fun equals(other: Any?): Boolean {
        if (this === other) {
            return true
        }
        if (other == null) {
            return false
        }
        if (this::class != other::class) {
            return false
        }
        val o: NewPei = other as NewPei
        if (this.newPeiId != o.newPeiId) {
            return false
        }
        if (this.newPeiTypePei != o.newPeiTypePei) {
            return false
        }
        if (this.newPeiVoieId == null) {
            if (o.newPeiVoieId != null) {
                return false
            }
        } else if (this.newPeiVoieId != o.newPeiVoieId) {
            return false
        }
        if (this.newPeiGeometrie != o.newPeiGeometrie) {
            return false
        }
        if (this.newPeiLieuDitId == null) {
            if (o.newPeiLieuDitId != null) {
                return false
            }
        } else if (this.newPeiLieuDitId != o.newPeiLieuDitId) {
            return false
        }
        if (this.newPeiObservation == null) {
            if (o.newPeiObservation != null) {
                return false
            }
        } else if (this.newPeiObservation != o.newPeiObservation) {
            return false
        }
        if (this.newPeiCommuneId != o.newPeiCommuneId) {
            return false
        }
        if (this.newPeiNatureId != o.newPeiNatureId) {
            return false
        }
        if (this.newPeiNatureDeciId != o.newPeiNatureDeciId) {
            return false
        }
        if (this.newPeiGestionnaireId == null) {
            if (o.newPeiGestionnaireId != null) {
                return false
            }
        } else if (this.newPeiGestionnaireId != o.newPeiGestionnaireId) {
            return false
        }
        if (this.newPeiDomaineId != o.newPeiDomaineId) {
            return false
        }
        return true
    }

    override fun hashCode(): Int {
        val prime = 31
        var result = 1
        result = prime * result + this.newPeiId.hashCode()
        result = prime * result + this.newPeiTypePei.hashCode()
        result = prime * result + (if (this.newPeiVoieId == null) 0 else this.newPeiVoieId.hashCode())
        result = prime * result + this.newPeiGeometrie.hashCode()
        result = prime * result + (if (this.newPeiLieuDitId == null) 0 else this.newPeiLieuDitId.hashCode())
        result = prime * result + (if (this.newPeiObservation == null) 0 else this.newPeiObservation.hashCode())
        result = prime * result + this.newPeiCommuneId.hashCode()
        result = prime * result + this.newPeiNatureId.hashCode()
        result = prime * result + this.newPeiNatureDeciId.hashCode()
        result = prime * result + (if (this.newPeiGestionnaireId == null) 0 else this.newPeiGestionnaireId.hashCode())
        result = prime * result + this.newPeiDomaineId.hashCode()
        return result
    }

    override fun toString(): String {
        val sb = StringBuilder("NewPei (")

        sb.append(newPeiId)
        sb.append(", ").append(newPeiTypePei)
        sb.append(", ").append(newPeiVoieId)
        sb.append(", ").append(newPeiGeometrie)
        sb.append(", ").append(newPeiLieuDitId)
        sb.append(", ").append(newPeiObservation)
        sb.append(", ").append(newPeiCommuneId)
        sb.append(", ").append(newPeiNatureId)
        sb.append(", ").append(newPeiNatureDeciId)
        sb.append(", ").append(newPeiGestionnaireId)
        sb.append(", ").append(newPeiDomaineId)

        sb.append(")")
        return sb.toString()
    }
}
