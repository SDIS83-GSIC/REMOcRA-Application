/*
 * This file is generated by jOOQ.
 */
package remocra.db.jooq.historique.enums

import org.jooq.Catalog
import org.jooq.EnumType
import org.jooq.Schema
import remocra.db.jooq.historique.Historique
import javax.annotation.processing.Generated

/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.19.11",
    ],
    comments = "This class is generated by jOOQ",
)
@Suppress("UNCHECKED_CAST")
enum class TypeObjet(@get:JvmName("literal") public val literal: String) : EnumType {
    PEI("PEI"),
    VISITE("VISITE"),
    PARAMETRE("PARAMETRE"),
    GESTIONNAIRE("GESTIONNAIRE"),
    SITE("SITE"),
    PENA_ASPIRATION("PENA_ASPIRATION"),
    DOCUMENT_PEI("DOCUMENT_PEI"),
    TOURNEE("TOURNEE"),
    TOURNEE_PEI("TOURNEE_PEI"),
    ETUDE("ETUDE"),
    PEI_PROJET("PEI_PROJET"),
    DOCUMENT_ETUDE("DOCUMENT_ETUDE"),
    INDISPONIBILITE_TEMPORAIRE("INDISPONIBILITE_TEMPORAIRE"),
    DIAMETRE("DIAMETRE"),
    NATURE("NATURE"),
    ORGANISME("ORGANISME"),
    PROFIL_ORGANISME("PROFIL_ORGANISME"),
    PROFIL_UTILISATEUR("PROFIL_UTILISATEUR"),
    TYPE_ORGANISME("TYPE_ORGANISME"),
    DOMAINE("DOMAINE"),
    TYPE_CANALISATION("TYPE_CANALISATION"),
    TYPE_ETUDE("TYPE_ETUDE"),
    TYPE_PENA_ASPIRATION("TYPE_PENA_ASPIRATION"),
    MODELE_PIBI("MODELE_PIBI"),
    NATURE_DECI("NATURE_DECI"),
    MATERIAU("MATERIAU"),
    MARQUE_PIBI("MARQUE_PIBI"),
    TYPE_RESEAU("TYPE_RESEAU"),
    NIVEAU("NIVEAU"),
    CONTACT("CONTACT"),
    ROLE_CONTACT("ROLE_CONTACT"),
    FONCTION_CONTACT("FONCTION_CONTACT"),
    THEMATIQUE("THEMATIQUE"),
    DOCUMENT_HABILITABLE("DOCUMENT_HABILITABLE"),
    ANOMALIE("ANOMALIE"),
    UTILISATEUR("UTILISATEUR"),
    FICHE_RESUME("FICHE_RESUME"),
    MODULE_ACCUEIL("MODULE_ACCUEIL"),
    PROFIL_DROIT("PROFIL_DROIT"),
    DEBIT_SIMULTANE("DEBIT_SIMULTANE"),
    ZONE_INTEGRATION("ZONE_INTEGRATION"),
    RAPPORT_PERSONNALISE("RAPPORT_PERSONNALISE"),
    DOCUMENT("DOCUMENT"),
    TASK("TASK"),
    DASHBOARD("DASHBOARD"),
    PEI_PRESCRIT("PEI_PRESCRIT"),
    OLDEB("OLDEB"),
    OLDEB_PROPRIETAIRE("OLDEB_PROPRIETAIRE"),
    RCCI("RCCI"),
    ADRESSE("ADRESSE"),
    ADRESSE_ELEMENT("ADRESSE_ELEMENT"),
    PERMIS("PERMIS"),
    DOCUMENT_PERMIS("DOCUMENT_PERMIS"),
    MODELE_COURRIER("MODELE_COURRIER"),
    DOCUMENT_MODELE_COURRIER("DOCUMENT_MODELE_COURRIER"),
    COURRIER("COURRIER"),
    CRISE("CRISE"),
    DOCUMENT_EVENEMENT("DOCUMENT_EVENEMENT"),
    EVENEMENT("EVENEMENT"),
    MESSAGE("MESSAGE"),
    CRISE_DOCUMENT("CRISE_DOCUMENT"),
    ;
    override fun getCatalog(): Catalog? = schema.catalog
    override fun getSchema(): Schema = Historique.HISTORIQUE
    override fun getName(): String = "type_objet"
    override fun getLiteral(): String = literal
}
