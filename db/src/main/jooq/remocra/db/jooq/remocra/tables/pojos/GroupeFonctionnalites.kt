/*
 * This file is generated by jOOQ.
 */
package remocra.db.jooq.remocra.tables.pojos

import remocra.db.jooq.remocra.enums.Droit
import java.io.Serializable
import java.util.Arrays
import java.util.UUID
import javax.annotation.processing.Generated

/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.19.11",
    ],
    comments = "This class is generated by jOOQ",
)
@Suppress("UNCHECKED_CAST")
data class GroupeFonctionnalites(
    val groupeFonctionnalitesId: UUID,
    val groupeFonctionnalitesCode: String,
    val groupeFonctionnalitesLibelle: String,
    val groupeFonctionnalitesDroits: Array<Droit?>,
    val groupeFonctionnalitesActif: Boolean,
) : Serializable {

    override fun equals(other: Any?): Boolean {
        if (this === other) {
            return true
        }
        if (other == null) {
            return false
        }
        if (this::class != other::class) {
            return false
        }
        val o: GroupeFonctionnalites = other as GroupeFonctionnalites
        if (this.groupeFonctionnalitesId != o.groupeFonctionnalitesId) {
            return false
        }
        if (this.groupeFonctionnalitesCode != o.groupeFonctionnalitesCode) {
            return false
        }
        if (this.groupeFonctionnalitesLibelle != o.groupeFonctionnalitesLibelle) {
            return false
        }
        if (!Arrays.deepEquals(this.groupeFonctionnalitesDroits, o.groupeFonctionnalitesDroits)) {
            return false
        }
        if (this.groupeFonctionnalitesActif != o.groupeFonctionnalitesActif) {
            return false
        }
        return true
    }

    override fun hashCode(): Int {
        val prime = 31
        var result = 1
        result = prime * result + this.groupeFonctionnalitesId.hashCode()
        result = prime * result + this.groupeFonctionnalitesCode.hashCode()
        result = prime * result + this.groupeFonctionnalitesLibelle.hashCode()
        result = prime * result + Arrays.deepHashCode(this.groupeFonctionnalitesDroits)
        result = prime * result + this.groupeFonctionnalitesActif.hashCode()
        return result
    }

    override fun toString(): String {
        val sb = StringBuilder("GroupeFonctionnalites (")

        sb.append(groupeFonctionnalitesId)
        sb.append(", ").append(groupeFonctionnalitesCode)
        sb.append(", ").append(groupeFonctionnalitesLibelle)
        sb.append(", ").append(Arrays.deepToString(groupeFonctionnalitesDroits))
        sb.append(", ").append(groupeFonctionnalitesActif)

        sb.append(")")
        return sb.toString()
    }
}
