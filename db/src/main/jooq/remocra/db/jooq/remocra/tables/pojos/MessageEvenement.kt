/*
 * This file is generated by jOOQ.
 */
package remocra.db.jooq.remocra.tables.pojos

import java.io.Serializable
import java.time.ZonedDateTime
import java.util.UUID
import javax.annotation.processing.Generated

/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.19.11",
    ],
    comments = "This class is generated by jOOQ",
)
@Suppress("UNCHECKED_CAST")
data class MessageEvenement(
    val messageId: UUID,
    val messageDateConstat: ZonedDateTime,
    val messageObjet: String,
    val messageDescription: String,
    val messageOrigine: String,
    val messageTag: String,
    val messageImportance: Int?,
    val utilisateurId: UUID?,
    val evenementId: UUID,
) : Serializable {

    override fun equals(other: Any?): Boolean {
        if (this === other) {
            return true
        }
        if (other == null) {
            return false
        }
        if (this::class != other::class) {
            return false
        }
        val o: MessageEvenement = other as MessageEvenement
        if (this.messageId != o.messageId) {
            return false
        }
        if (this.messageDateConstat != o.messageDateConstat) {
            return false
        }
        if (this.messageObjet != o.messageObjet) {
            return false
        }
        if (this.messageDescription != o.messageDescription) {
            return false
        }
        if (this.messageOrigine != o.messageOrigine) {
            return false
        }
        if (this.messageTag != o.messageTag) {
            return false
        }
        if (this.messageImportance == null) {
            if (o.messageImportance != null) {
                return false
            }
        } else if (this.messageImportance != o.messageImportance) {
            return false
        }
        if (this.utilisateurId == null) {
            if (o.utilisateurId != null) {
                return false
            }
        } else if (this.utilisateurId != o.utilisateurId) {
            return false
        }
        if (this.evenementId != o.evenementId) {
            return false
        }
        return true
    }

    override fun hashCode(): Int {
        val prime = 31
        var result = 1
        result = prime * result + this.messageId.hashCode()
        result = prime * result + this.messageDateConstat.hashCode()
        result = prime * result + this.messageObjet.hashCode()
        result = prime * result + this.messageDescription.hashCode()
        result = prime * result + this.messageOrigine.hashCode()
        result = prime * result + this.messageTag.hashCode()
        result = prime * result + (if (this.messageImportance == null) 0 else this.messageImportance.hashCode())
        result = prime * result + (if (this.utilisateurId == null) 0 else this.utilisateurId.hashCode())
        result = prime * result + this.evenementId.hashCode()
        return result
    }

    override fun toString(): String {
        val sb = StringBuilder("MessageEvenement (")

        sb.append(messageId)
        sb.append(", ").append(messageDateConstat)
        sb.append(", ").append(messageObjet)
        sb.append(", ").append(messageDescription)
        sb.append(", ").append(messageOrigine)
        sb.append(", ").append(messageTag)
        sb.append(", ").append(messageImportance)
        sb.append(", ").append(utilisateurId)
        sb.append(", ").append(evenementId)

        sb.append(")")
        return sb.toString()
    }
}
