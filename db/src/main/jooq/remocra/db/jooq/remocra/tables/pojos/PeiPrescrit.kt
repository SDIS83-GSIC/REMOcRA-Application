/*
 * This file is generated by jOOQ.
 */
package remocra.db.jooq.remocra.tables.pojos

import org.locationtech.jts.geom.Geometry
import java.io.Serializable
import java.time.ZonedDateTime
import java.util.UUID
import javax.annotation.processing.Generated

/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.19.11",
    ],
    comments = "This class is generated by jOOQ",
)
@Suppress("UNCHECKED_CAST")
data class PeiPrescrit(
    val peiPrescritId: UUID,
    val peiPrescritDate: ZonedDateTime?,
    val peiPrescritDebit: Int?,
    val peiPrescritNbPoteaux: Int?,
    val peiPrescritOrganismeId: UUID?,
    val peiPrescritCommentaire: String?,
    val peiPrescritAgent: String?,
    val peiPrescritNumDossier: String?,
    val peiPrescritGeometrie: Geometry,
) : Serializable {

    override fun equals(other: Any?): Boolean {
        if (this === other) {
            return true
        }
        if (other == null) {
            return false
        }
        if (this::class != other::class) {
            return false
        }
        val o: PeiPrescrit = other as PeiPrescrit
        if (this.peiPrescritId != o.peiPrescritId) {
            return false
        }
        if (this.peiPrescritDate == null) {
            if (o.peiPrescritDate != null) {
                return false
            }
        } else if (this.peiPrescritDate != o.peiPrescritDate) {
            return false
        }
        if (this.peiPrescritDebit == null) {
            if (o.peiPrescritDebit != null) {
                return false
            }
        } else if (this.peiPrescritDebit != o.peiPrescritDebit) {
            return false
        }
        if (this.peiPrescritNbPoteaux == null) {
            if (o.peiPrescritNbPoteaux != null) {
                return false
            }
        } else if (this.peiPrescritNbPoteaux != o.peiPrescritNbPoteaux) {
            return false
        }
        if (this.peiPrescritOrganismeId == null) {
            if (o.peiPrescritOrganismeId != null) {
                return false
            }
        } else if (this.peiPrescritOrganismeId != o.peiPrescritOrganismeId) {
            return false
        }
        if (this.peiPrescritCommentaire == null) {
            if (o.peiPrescritCommentaire != null) {
                return false
            }
        } else if (this.peiPrescritCommentaire != o.peiPrescritCommentaire) {
            return false
        }
        if (this.peiPrescritAgent == null) {
            if (o.peiPrescritAgent != null) {
                return false
            }
        } else if (this.peiPrescritAgent != o.peiPrescritAgent) {
            return false
        }
        if (this.peiPrescritNumDossier == null) {
            if (o.peiPrescritNumDossier != null) {
                return false
            }
        } else if (this.peiPrescritNumDossier != o.peiPrescritNumDossier) {
            return false
        }
        if (this.peiPrescritGeometrie != o.peiPrescritGeometrie) {
            return false
        }
        return true
    }

    override fun hashCode(): Int {
        val prime = 31
        var result = 1
        result = prime * result + this.peiPrescritId.hashCode()
        result = prime * result + (if (this.peiPrescritDate == null) 0 else this.peiPrescritDate.hashCode())
        result = prime * result + (if (this.peiPrescritDebit == null) 0 else this.peiPrescritDebit.hashCode())
        result = prime * result + (if (this.peiPrescritNbPoteaux == null) 0 else this.peiPrescritNbPoteaux.hashCode())
        result = prime * result + (if (this.peiPrescritOrganismeId == null) 0 else this.peiPrescritOrganismeId.hashCode())
        result = prime * result + (if (this.peiPrescritCommentaire == null) 0 else this.peiPrescritCommentaire.hashCode())
        result = prime * result + (if (this.peiPrescritAgent == null) 0 else this.peiPrescritAgent.hashCode())
        result = prime * result + (if (this.peiPrescritNumDossier == null) 0 else this.peiPrescritNumDossier.hashCode())
        result = prime * result + this.peiPrescritGeometrie.hashCode()
        return result
    }

    override fun toString(): String {
        val sb = StringBuilder("PeiPrescrit (")

        sb.append(peiPrescritId)
        sb.append(", ").append(peiPrescritDate)
        sb.append(", ").append(peiPrescritDebit)
        sb.append(", ").append(peiPrescritNbPoteaux)
        sb.append(", ").append(peiPrescritOrganismeId)
        sb.append(", ").append(peiPrescritCommentaire)
        sb.append(", ").append(peiPrescritAgent)
        sb.append(", ").append(peiPrescritNumDossier)
        sb.append(", ").append(peiPrescritGeometrie)

        sb.append(")")
        return sb.toString()
    }
}
