/*
 * This file is generated by jOOQ.
 */
package remocra.db.jooq.remocra.tables.pojos

import remocra.db.jooq.remocra.enums.TypeGeometry
import java.io.Serializable
import java.util.UUID
import javax.annotation.processing.Generated

/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.19.11",
    ],
    comments = "This class is generated by jOOQ",
)
@Suppress("UNCHECKED_CAST")
data class AdresseSousTypeElement(
    val adresseSousTypeElementId: UUID,
    val adresseSousTypeElementActif: Boolean,
    val adresseSousTypeElementCode: String,
    val adresseSousTypeElementLibelle: String?,
    val adresseSousTypeElementTypeGeometrie: TypeGeometry,
    val adresseSousTypeElementTypeElement: UUID?,
) : Serializable {

    override fun equals(other: Any?): Boolean {
        if (this === other) {
            return true
        }
        if (other == null) {
            return false
        }
        if (this::class != other::class) {
            return false
        }
        val o: AdresseSousTypeElement = other as AdresseSousTypeElement
        if (this.adresseSousTypeElementId != o.adresseSousTypeElementId) {
            return false
        }
        if (this.adresseSousTypeElementActif != o.adresseSousTypeElementActif) {
            return false
        }
        if (this.adresseSousTypeElementCode != o.adresseSousTypeElementCode) {
            return false
        }
        if (this.adresseSousTypeElementLibelle == null) {
            if (o.adresseSousTypeElementLibelle != null) {
                return false
            }
        } else if (this.adresseSousTypeElementLibelle != o.adresseSousTypeElementLibelle) {
            return false
        }
        if (this.adresseSousTypeElementTypeGeometrie != o.adresseSousTypeElementTypeGeometrie) {
            return false
        }
        if (this.adresseSousTypeElementTypeElement == null) {
            if (o.adresseSousTypeElementTypeElement != null) {
                return false
            }
        } else if (this.adresseSousTypeElementTypeElement != o.adresseSousTypeElementTypeElement) {
            return false
        }
        return true
    }

    override fun hashCode(): Int {
        val prime = 31
        var result = 1
        result = prime * result + this.adresseSousTypeElementId.hashCode()
        result = prime * result + this.adresseSousTypeElementActif.hashCode()
        result = prime * result + this.adresseSousTypeElementCode.hashCode()
        result = prime * result + (if (this.adresseSousTypeElementLibelle == null) 0 else this.adresseSousTypeElementLibelle.hashCode())
        result = prime * result + this.adresseSousTypeElementTypeGeometrie.hashCode()
        result = prime * result + (if (this.adresseSousTypeElementTypeElement == null) 0 else this.adresseSousTypeElementTypeElement.hashCode())
        return result
    }

    override fun toString(): String {
        val sb = StringBuilder("AdresseSousTypeElement (")

        sb.append(adresseSousTypeElementId)
        sb.append(", ").append(adresseSousTypeElementActif)
        sb.append(", ").append(adresseSousTypeElementCode)
        sb.append(", ").append(adresseSousTypeElementLibelle)
        sb.append(", ").append(adresseSousTypeElementTypeGeometrie)
        sb.append(", ").append(adresseSousTypeElementTypeElement)

        sb.append(")")
        return sb.toString()
    }
}
