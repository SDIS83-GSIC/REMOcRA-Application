/*
 * This file is generated by jOOQ.
 */
package remocra.db.jooq.remocra.tables.pojos

import remocra.db.jooq.remocra.enums.TypeModule
import java.io.Serializable
import java.util.UUID
import javax.annotation.processing.Generated

/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.19.3",
    ],
    comments = "This class is generated by jOOQ",
)
@Suppress("UNCHECKED_CAST")
data class Module(
    val moduleId: UUID,
    val moduleType: TypeModule,
    val moduleTitre: String?,
    val moduleImage: String?,
    val moduleContenuHtml: String?,
    val moduleColonne: Int,
    val moduleLigne: Int,
) : Serializable {

    override fun equals(other: Any?): Boolean {
        if (this === other) {
            return true
        }
        if (other == null) {
            return false
        }
        if (this::class != other::class) {
            return false
        }
        val o: Module = other as Module
        if (this.moduleId != o.moduleId) {
            return false
        }
        if (this.moduleType != o.moduleType) {
            return false
        }
        if (this.moduleTitre == null) {
            if (o.moduleTitre != null) {
                return false
            }
        } else if (this.moduleTitre != o.moduleTitre) {
            return false
        }
        if (this.moduleImage == null) {
            if (o.moduleImage != null) {
                return false
            }
        } else if (this.moduleImage != o.moduleImage) {
            return false
        }
        if (this.moduleContenuHtml == null) {
            if (o.moduleContenuHtml != null) {
                return false
            }
        } else if (this.moduleContenuHtml != o.moduleContenuHtml) {
            return false
        }
        if (this.moduleColonne != o.moduleColonne) {
            return false
        }
        if (this.moduleLigne != o.moduleLigne) {
            return false
        }
        return true
    }

    override fun hashCode(): Int {
        val prime = 31
        var result = 1
        result = prime * result + this.moduleId.hashCode()
        result = prime * result + this.moduleType.hashCode()
        result = prime * result + (if (this.moduleTitre == null) 0 else this.moduleTitre.hashCode())
        result = prime * result + (if (this.moduleImage == null) 0 else this.moduleImage.hashCode())
        result = prime * result + (if (this.moduleContenuHtml == null) 0 else this.moduleContenuHtml.hashCode())
        result = prime * result + this.moduleColonne.hashCode()
        result = prime * result + this.moduleLigne.hashCode()
        return result
    }

    override fun toString(): String {
        val sb = StringBuilder("Module (")

        sb.append(moduleId)
        sb.append(", ").append(moduleType)
        sb.append(", ").append(moduleTitre)
        sb.append(", ").append(moduleImage)
        sb.append(", ").append(moduleContenuHtml)
        sb.append(", ").append(moduleColonne)
        sb.append(", ").append(moduleLigne)

        sb.append(")")
        return sb.toString()
    }
}
