/*
 * This file is generated by jOOQ.
 */
package remocra.db.jooq.remocra.tables.pojos

import remocra.db.jooq.remocra.enums.TypeDestinataire
import java.io.Serializable
import java.util.UUID
import javax.annotation.processing.Generated

/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.19.11",
    ],
    comments = "This class is generated by jOOQ",
)
@Suppress("UNCHECKED_CAST")
data class Courrier(
    val courrierId: UUID,
    val courrierDocumentId: UUID,
    val courrierReference: String,
    val courrierTypeDestinataire: TypeDestinataire?,
    val courrierObjet: String,
    val courrierExpediteur: UUID?,
) : Serializable {

    override fun equals(other: Any?): Boolean {
        if (this === other) {
            return true
        }
        if (other == null) {
            return false
        }
        if (this::class != other::class) {
            return false
        }
        val o: Courrier = other as Courrier
        if (this.courrierId != o.courrierId) {
            return false
        }
        if (this.courrierDocumentId != o.courrierDocumentId) {
            return false
        }
        if (this.courrierReference != o.courrierReference) {
            return false
        }
        if (this.courrierTypeDestinataire == null) {
            if (o.courrierTypeDestinataire != null) {
                return false
            }
        } else if (this.courrierTypeDestinataire != o.courrierTypeDestinataire) {
            return false
        }
        if (this.courrierObjet != o.courrierObjet) {
            return false
        }
        if (this.courrierExpediteur == null) {
            if (o.courrierExpediteur != null) {
                return false
            }
        } else if (this.courrierExpediteur != o.courrierExpediteur) {
            return false
        }
        return true
    }

    override fun hashCode(): Int {
        val prime = 31
        var result = 1
        result = prime * result + this.courrierId.hashCode()
        result = prime * result + this.courrierDocumentId.hashCode()
        result = prime * result + this.courrierReference.hashCode()
        result = prime * result + (if (this.courrierTypeDestinataire == null) 0 else this.courrierTypeDestinataire.hashCode())
        result = prime * result + this.courrierObjet.hashCode()
        result = prime * result + (if (this.courrierExpediteur == null) 0 else this.courrierExpediteur.hashCode())
        return result
    }

    override fun toString(): String {
        val sb = StringBuilder("Courrier (")

        sb.append(courrierId)
        sb.append(", ").append(courrierDocumentId)
        sb.append(", ").append(courrierReference)
        sb.append(", ").append(courrierTypeDestinataire)
        sb.append(", ").append(courrierObjet)
        sb.append(", ").append(courrierExpediteur)

        sb.append(")")
        return sb.toString()
    }
}
