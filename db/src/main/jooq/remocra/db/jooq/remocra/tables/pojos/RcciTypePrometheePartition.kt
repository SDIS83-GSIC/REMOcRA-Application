/*
 * This file is generated by jOOQ.
 */
package remocra.db.jooq.remocra.tables.pojos

import java.io.Serializable
import java.util.UUID
import javax.annotation.processing.Generated

/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.19.11",
    ],
    comments = "This class is generated by jOOQ",
)
@Suppress("UNCHECKED_CAST")
data class RcciTypePrometheePartition(
    val rcciTypePrometheePartitionId: UUID,
    val rcciTypePrometheePartitionActif: Boolean,
    val rcciTypePrometheePartitionCode: String,
    val rcciTypePrometheePartitionLibelle: String,
    val rcciTypePrometheePartitionRcciTypePrometheeFamilleId: UUID?,
) : Serializable {

    override fun equals(other: Any?): Boolean {
        if (this === other) {
            return true
        }
        if (other == null) {
            return false
        }
        if (this::class != other::class) {
            return false
        }
        val o: RcciTypePrometheePartition = other as RcciTypePrometheePartition
        if (this.rcciTypePrometheePartitionId != o.rcciTypePrometheePartitionId) {
            return false
        }
        if (this.rcciTypePrometheePartitionActif != o.rcciTypePrometheePartitionActif) {
            return false
        }
        if (this.rcciTypePrometheePartitionCode != o.rcciTypePrometheePartitionCode) {
            return false
        }
        if (this.rcciTypePrometheePartitionLibelle != o.rcciTypePrometheePartitionLibelle) {
            return false
        }
        if (this.rcciTypePrometheePartitionRcciTypePrometheeFamilleId == null) {
            if (o.rcciTypePrometheePartitionRcciTypePrometheeFamilleId != null) {
                return false
            }
        } else if (this.rcciTypePrometheePartitionRcciTypePrometheeFamilleId != o.rcciTypePrometheePartitionRcciTypePrometheeFamilleId) {
            return false
        }
        return true
    }

    override fun hashCode(): Int {
        val prime = 31
        var result = 1
        result = prime * result + this.rcciTypePrometheePartitionId.hashCode()
        result = prime * result + this.rcciTypePrometheePartitionActif.hashCode()
        result = prime * result + this.rcciTypePrometheePartitionCode.hashCode()
        result = prime * result + this.rcciTypePrometheePartitionLibelle.hashCode()
        result = prime * result + (if (this.rcciTypePrometheePartitionRcciTypePrometheeFamilleId == null) 0 else this.rcciTypePrometheePartitionRcciTypePrometheeFamilleId.hashCode())
        return result
    }

    override fun toString(): String {
        val sb = StringBuilder("RcciTypePrometheePartition (")

        sb.append(rcciTypePrometheePartitionId)
        sb.append(", ").append(rcciTypePrometheePartitionActif)
        sb.append(", ").append(rcciTypePrometheePartitionCode)
        sb.append(", ").append(rcciTypePrometheePartitionLibelle)
        sb.append(", ").append(rcciTypePrometheePartitionRcciTypePrometheeFamilleId)

        sb.append(")")
        return sb.toString()
    }
}
