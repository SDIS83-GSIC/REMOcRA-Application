/*
 * This file is generated by jOOQ.
 */
package remocra.db.jooq.remocra.tables.pojos

import org.locationtech.jts.geom.Geometry
import java.io.Serializable
import java.util.UUID
import javax.annotation.processing.Generated

/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.19.11",
    ],
    comments = "This class is generated by jOOQ",
)
@Suppress("UNCHECKED_CAST")
data class Commune(
    val communeId: UUID,
    val communeLibelle: String,
    val communeCodeInsee: String,
    val communeCodePostal: String,
    val communeGeometrie: Geometry,
    val communePprif: Boolean,
) : Serializable {

    override fun equals(other: Any?): Boolean {
        if (this === other) {
            return true
        }
        if (other == null) {
            return false
        }
        if (this::class != other::class) {
            return false
        }
        val o: Commune = other as Commune
        if (this.communeId != o.communeId) {
            return false
        }
        if (this.communeLibelle != o.communeLibelle) {
            return false
        }
        if (this.communeCodeInsee != o.communeCodeInsee) {
            return false
        }
        if (this.communeCodePostal != o.communeCodePostal) {
            return false
        }
        if (this.communeGeometrie != o.communeGeometrie) {
            return false
        }
        if (this.communePprif != o.communePprif) {
            return false
        }
        return true
    }

    override fun hashCode(): Int {
        val prime = 31
        var result = 1
        result = prime * result + this.communeId.hashCode()
        result = prime * result + this.communeLibelle.hashCode()
        result = prime * result + this.communeCodeInsee.hashCode()
        result = prime * result + this.communeCodePostal.hashCode()
        result = prime * result + this.communeGeometrie.hashCode()
        result = prime * result + this.communePprif.hashCode()
        return result
    }

    override fun toString(): String {
        val sb = StringBuilder("Commune (")

        sb.append(communeId)
        sb.append(", ").append(communeLibelle)
        sb.append(", ").append(communeCodeInsee)
        sb.append(", ").append(communeCodePostal)
        sb.append(", ").append(communeGeometrie)
        sb.append(", ").append(communePprif)

        sb.append(")")
        return sb.toString()
    }
}
