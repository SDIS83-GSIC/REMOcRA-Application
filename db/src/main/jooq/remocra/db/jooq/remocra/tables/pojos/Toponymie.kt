/*
 * This file is generated by jOOQ.
 */
package remocra.db.jooq.remocra.tables.pojos

import org.locationtech.jts.geom.Geometry
import java.io.Serializable
import java.util.UUID
import javax.annotation.processing.Generated

/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.19.11",
    ],
    comments = "This class is generated by jOOQ",
)
@Suppress("UNCHECKED_CAST")
data class Toponymie(
    val toponymieId: UUID,
    val toponymieLibelle: String?,
    val toponymieCode: String,
    val toponymieGeometrie: Geometry,
    val typeToponymieId: UUID,
) : Serializable {

    override fun equals(other: Any?): Boolean {
        if (this === other) {
            return true
        }
        if (other == null) {
            return false
        }
        if (this::class != other::class) {
            return false
        }
        val o: Toponymie = other as Toponymie
        if (this.toponymieId != o.toponymieId) {
            return false
        }
        if (this.toponymieLibelle == null) {
            if (o.toponymieLibelle != null) {
                return false
            }
        } else if (this.toponymieLibelle != o.toponymieLibelle) {
            return false
        }
        if (this.toponymieCode != o.toponymieCode) {
            return false
        }
        if (this.toponymieGeometrie != o.toponymieGeometrie) {
            return false
        }
        if (this.typeToponymieId != o.typeToponymieId) {
            return false
        }
        return true
    }

    override fun hashCode(): Int {
        val prime = 31
        var result = 1
        result = prime * result + this.toponymieId.hashCode()
        result = prime * result + (if (this.toponymieLibelle == null) 0 else this.toponymieLibelle.hashCode())
        result = prime * result + this.toponymieCode.hashCode()
        result = prime * result + this.toponymieGeometrie.hashCode()
        result = prime * result + this.typeToponymieId.hashCode()
        return result
    }

    override fun toString(): String {
        val sb = StringBuilder("Toponymie (")

        sb.append(toponymieId)
        sb.append(", ").append(toponymieLibelle)
        sb.append(", ").append(toponymieCode)
        sb.append(", ").append(toponymieGeometrie)
        sb.append(", ").append(typeToponymieId)

        sb.append(")")
        return sb.toString()
    }
}
