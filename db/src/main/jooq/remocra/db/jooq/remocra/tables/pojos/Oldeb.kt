/*
 * This file is generated by jOOQ.
 */
package remocra.db.jooq.remocra.tables.pojos

import org.locationtech.jts.geom.Geometry
import java.io.Serializable
import java.util.UUID
import javax.annotation.processing.Generated

/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.19.11",
    ],
    comments = "This class is generated by jOOQ",
)
@Suppress("UNCHECKED_CAST")
data class Oldeb(
    val oldebId: UUID,
    val oldebGeometrie: Geometry,
    val oldebCommuneId: UUID,
    val oldebCadastraSectionId: UUID,
    val oldebCadastreParcelleId: UUID,
    val oldebOldebTypeAccesId: UUID?,
    val oldebOldebTypeZoneUrbanismeId: UUID?,
    val oldebNumVoie: String?,
    val oldebVoieId: UUID?,
    val oldebLieuDitId: UUID?,
    val oldebVolume: Int,
    val oldebLargeurAcces: Int?,
    val oldebPortailElectrique: Boolean,
    val oldebCodePortail: String?,
    val oldebActif: Boolean?,
) : Serializable {

    override fun equals(other: Any?): Boolean {
        if (this === other) {
            return true
        }
        if (other == null) {
            return false
        }
        if (this::class != other::class) {
            return false
        }
        val o: Oldeb = other as Oldeb
        if (this.oldebId != o.oldebId) {
            return false
        }
        if (this.oldebGeometrie != o.oldebGeometrie) {
            return false
        }
        if (this.oldebCommuneId != o.oldebCommuneId) {
            return false
        }
        if (this.oldebCadastraSectionId != o.oldebCadastraSectionId) {
            return false
        }
        if (this.oldebCadastreParcelleId != o.oldebCadastreParcelleId) {
            return false
        }
        if (this.oldebOldebTypeAccesId == null) {
            if (o.oldebOldebTypeAccesId != null) {
                return false
            }
        } else if (this.oldebOldebTypeAccesId != o.oldebOldebTypeAccesId) {
            return false
        }
        if (this.oldebOldebTypeZoneUrbanismeId == null) {
            if (o.oldebOldebTypeZoneUrbanismeId != null) {
                return false
            }
        } else if (this.oldebOldebTypeZoneUrbanismeId != o.oldebOldebTypeZoneUrbanismeId) {
            return false
        }
        if (this.oldebNumVoie == null) {
            if (o.oldebNumVoie != null) {
                return false
            }
        } else if (this.oldebNumVoie != o.oldebNumVoie) {
            return false
        }
        if (this.oldebVoieId == null) {
            if (o.oldebVoieId != null) {
                return false
            }
        } else if (this.oldebVoieId != o.oldebVoieId) {
            return false
        }
        if (this.oldebLieuDitId == null) {
            if (o.oldebLieuDitId != null) {
                return false
            }
        } else if (this.oldebLieuDitId != o.oldebLieuDitId) {
            return false
        }
        if (this.oldebVolume != o.oldebVolume) {
            return false
        }
        if (this.oldebLargeurAcces == null) {
            if (o.oldebLargeurAcces != null) {
                return false
            }
        } else if (this.oldebLargeurAcces != o.oldebLargeurAcces) {
            return false
        }
        if (this.oldebPortailElectrique != o.oldebPortailElectrique) {
            return false
        }
        if (this.oldebCodePortail == null) {
            if (o.oldebCodePortail != null) {
                return false
            }
        } else if (this.oldebCodePortail != o.oldebCodePortail) {
            return false
        }
        if (this.oldebActif == null) {
            if (o.oldebActif != null) {
                return false
            }
        } else if (this.oldebActif != o.oldebActif) {
            return false
        }
        return true
    }

    override fun hashCode(): Int {
        val prime = 31
        var result = 1
        result = prime * result + this.oldebId.hashCode()
        result = prime * result + this.oldebGeometrie.hashCode()
        result = prime * result + this.oldebCommuneId.hashCode()
        result = prime * result + this.oldebCadastraSectionId.hashCode()
        result = prime * result + this.oldebCadastreParcelleId.hashCode()
        result = prime * result + (if (this.oldebOldebTypeAccesId == null) 0 else this.oldebOldebTypeAccesId.hashCode())
        result = prime * result + (if (this.oldebOldebTypeZoneUrbanismeId == null) 0 else this.oldebOldebTypeZoneUrbanismeId.hashCode())
        result = prime * result + (if (this.oldebNumVoie == null) 0 else this.oldebNumVoie.hashCode())
        result = prime * result + (if (this.oldebVoieId == null) 0 else this.oldebVoieId.hashCode())
        result = prime * result + (if (this.oldebLieuDitId == null) 0 else this.oldebLieuDitId.hashCode())
        result = prime * result + this.oldebVolume.hashCode()
        result = prime * result + (if (this.oldebLargeurAcces == null) 0 else this.oldebLargeurAcces.hashCode())
        result = prime * result + this.oldebPortailElectrique.hashCode()
        result = prime * result + (if (this.oldebCodePortail == null) 0 else this.oldebCodePortail.hashCode())
        result = prime * result + (if (this.oldebActif == null) 0 else this.oldebActif.hashCode())
        return result
    }

    override fun toString(): String {
        val sb = StringBuilder("Oldeb (")

        sb.append(oldebId)
        sb.append(", ").append(oldebGeometrie)
        sb.append(", ").append(oldebCommuneId)
        sb.append(", ").append(oldebCadastraSectionId)
        sb.append(", ").append(oldebCadastreParcelleId)
        sb.append(", ").append(oldebOldebTypeAccesId)
        sb.append(", ").append(oldebOldebTypeZoneUrbanismeId)
        sb.append(", ").append(oldebNumVoie)
        sb.append(", ").append(oldebVoieId)
        sb.append(", ").append(oldebLieuDitId)
        sb.append(", ").append(oldebVolume)
        sb.append(", ").append(oldebLargeurAcces)
        sb.append(", ").append(oldebPortailElectrique)
        sb.append(", ").append(oldebCodePortail)
        sb.append(", ").append(oldebActif)

        sb.append(")")
        return sb.toString()
    }
}
