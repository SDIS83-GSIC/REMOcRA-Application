/*
 * This file is generated by jOOQ.
 */
package remocra.db.jooq.remocra.tables.pojos

import remocra.db.jooq.remocra.enums.EtatJob
import java.io.Serializable
import java.time.OffsetDateTime
import java.util.UUID
import javax.annotation.processing.Generated

/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.19.3",
    ],
    comments = "This class is generated by jOOQ",
)
@Suppress("UNCHECKED_CAST")
data class Job(
    val jobId: UUID,
    val jobTaskId: UUID,
    val jobEtatJob: EtatJob,
    val jobDateDebut: OffsetDateTime,
    val jobDateFin: OffsetDateTime?,
    val jobParametres: String?,
) : Serializable {

    override fun equals(other: Any?): Boolean {
        if (this === other) {
            return true
        }
        if (other == null) {
            return false
        }
        if (this::class != other::class) {
            return false
        }
        val o: Job = other as Job
        if (this.jobId != o.jobId) {
            return false
        }
        if (this.jobTaskId != o.jobTaskId) {
            return false
        }
        if (this.jobEtatJob != o.jobEtatJob) {
            return false
        }
        if (this.jobDateDebut != o.jobDateDebut) {
            return false
        }
        if (this.jobDateFin == null) {
            if (o.jobDateFin != null) {
                return false
            }
        } else if (this.jobDateFin != o.jobDateFin) {
            return false
        }
        if (this.jobParametres == null) {
            if (o.jobParametres != null) {
                return false
            }
        } else if (this.jobParametres != o.jobParametres) {
            return false
        }
        return true
    }

    override fun hashCode(): Int {
        val prime = 31
        var result = 1
        result = prime * result + this.jobId.hashCode()
        result = prime * result + this.jobTaskId.hashCode()
        result = prime * result + this.jobEtatJob.hashCode()
        result = prime * result + this.jobDateDebut.hashCode()
        result = prime * result + (if (this.jobDateFin == null) 0 else this.jobDateFin.hashCode())
        result = prime * result + (if (this.jobParametres == null) 0 else this.jobParametres.hashCode())
        return result
    }

    override fun toString(): String {
        val sb = StringBuilder("Job (")

        sb.append(jobId)
        sb.append(", ").append(jobTaskId)
        sb.append(", ").append(jobEtatJob)
        sb.append(", ").append(jobDateDebut)
        sb.append(", ").append(jobDateFin)
        sb.append(", ").append(jobParametres)

        sb.append(")")
        return sb.toString()
    }
}
