/*
 * This file is generated by jOOQ.
 */
package remocra.db.jooq.remocra.tables.pojos

import org.locationtech.jts.geom.Geometry
import java.io.Serializable
import java.util.UUID
import javax.annotation.processing.Generated

/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.19.11",
    ],
    comments = "This class is generated by jOOQ",
)
@Suppress("UNCHECKED_CAST")
data class Site(
    val siteId: UUID,
    val siteActif: Boolean,
    val siteCode: String,
    val siteLibelle: String,
    val siteGeometrie: Geometry?,
    val siteGestionnaireId: UUID?,
) : Serializable {

    override fun equals(other: Any?): Boolean {
        if (this === other) {
            return true
        }
        if (other == null) {
            return false
        }
        if (this::class != other::class) {
            return false
        }
        val o: Site = other as Site
        if (this.siteId != o.siteId) {
            return false
        }
        if (this.siteActif != o.siteActif) {
            return false
        }
        if (this.siteCode != o.siteCode) {
            return false
        }
        if (this.siteLibelle != o.siteLibelle) {
            return false
        }
        if (this.siteGeometrie == null) {
            if (o.siteGeometrie != null) {
                return false
            }
        } else if (this.siteGeometrie != o.siteGeometrie) {
            return false
        }
        if (this.siteGestionnaireId == null) {
            if (o.siteGestionnaireId != null) {
                return false
            }
        } else if (this.siteGestionnaireId != o.siteGestionnaireId) {
            return false
        }
        return true
    }

    override fun hashCode(): Int {
        val prime = 31
        var result = 1
        result = prime * result + this.siteId.hashCode()
        result = prime * result + this.siteActif.hashCode()
        result = prime * result + this.siteCode.hashCode()
        result = prime * result + this.siteLibelle.hashCode()
        result = prime * result + (if (this.siteGeometrie == null) 0 else this.siteGeometrie.hashCode())
        result = prime * result + (if (this.siteGestionnaireId == null) 0 else this.siteGestionnaireId.hashCode())
        return result
    }

    override fun toString(): String {
        val sb = StringBuilder("Site (")

        sb.append(siteId)
        sb.append(", ").append(siteActif)
        sb.append(", ").append(siteCode)
        sb.append(", ").append(siteLibelle)
        sb.append(", ").append(siteGeometrie)
        sb.append(", ").append(siteGestionnaireId)

        sb.append(")")
        return sb.toString()
    }
}
