/*
 * This file is generated by jOOQ.
 */
package remocra.db.jooq.remocra.tables.pojos

import java.io.Serializable
import java.util.UUID
import javax.annotation.processing.Generated

/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.19.11",
    ],
    comments = "This class is generated by jOOQ",
)
@Suppress("UNCHECKED_CAST")
data class FonctionContact(
    val fonctionContactId: UUID,
    val fonctionContactActif: Boolean,
    val fonctionContactProtected: Boolean,
    val fonctionContactCode: String,
    val fonctionContactLibelle: String,
) : Serializable {

    override fun equals(other: Any?): Boolean {
        if (this === other) {
            return true
        }
        if (other == null) {
            return false
        }
        if (this::class != other::class) {
            return false
        }
        val o: FonctionContact = other as FonctionContact
        if (this.fonctionContactId != o.fonctionContactId) {
            return false
        }
        if (this.fonctionContactActif != o.fonctionContactActif) {
            return false
        }
        if (this.fonctionContactProtected != o.fonctionContactProtected) {
            return false
        }
        if (this.fonctionContactCode != o.fonctionContactCode) {
            return false
        }
        if (this.fonctionContactLibelle != o.fonctionContactLibelle) {
            return false
        }
        return true
    }

    override fun hashCode(): Int {
        val prime = 31
        var result = 1
        result = prime * result + this.fonctionContactId.hashCode()
        result = prime * result + this.fonctionContactActif.hashCode()
        result = prime * result + this.fonctionContactProtected.hashCode()
        result = prime * result + this.fonctionContactCode.hashCode()
        result = prime * result + this.fonctionContactLibelle.hashCode()
        return result
    }

    override fun toString(): String {
        val sb = StringBuilder("FonctionContact (")

        sb.append(fonctionContactId)
        sb.append(", ").append(fonctionContactActif)
        sb.append(", ").append(fonctionContactProtected)
        sb.append(", ").append(fonctionContactCode)
        sb.append(", ").append(fonctionContactLibelle)

        sb.append(")")
        return sb.toString()
    }
}
