/*
 * This file is generated by jOOQ.
 */
package remocra.db.jooq.remocra.tables.pojos

import org.locationtech.jts.geom.Geometry
import remocra.db.jooq.remocra.enums.EtatAdresse
import java.io.Serializable
import java.time.ZonedDateTime
import java.util.UUID
import javax.annotation.processing.Generated

/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.19.11",
    ],
    comments = "This class is generated by jOOQ",
)
@Suppress("UNCHECKED_CAST")
data class Adresse(
    val adresseId: UUID,
    val adresseDescription: String?,
    val adresseUtilisateur: UUID,
    val adresseDateConstat: ZonedDateTime?,
    val adresseDateModification: ZonedDateTime?,
    val adresseType: EtatAdresse,
    val adresseGeometrie: Geometry,
) : Serializable {

    override fun equals(other: Any?): Boolean {
        if (this === other) {
            return true
        }
        if (other == null) {
            return false
        }
        if (this::class != other::class) {
            return false
        }
        val o: Adresse = other as Adresse
        if (this.adresseId != o.adresseId) {
            return false
        }
        if (this.adresseDescription == null) {
            if (o.adresseDescription != null) {
                return false
            }
        } else if (this.adresseDescription != o.adresseDescription) {
            return false
        }
        if (this.adresseUtilisateur != o.adresseUtilisateur) {
            return false
        }
        if (this.adresseDateConstat == null) {
            if (o.adresseDateConstat != null) {
                return false
            }
        } else if (this.adresseDateConstat != o.adresseDateConstat) {
            return false
        }
        if (this.adresseDateModification == null) {
            if (o.adresseDateModification != null) {
                return false
            }
        } else if (this.adresseDateModification != o.adresseDateModification) {
            return false
        }
        if (this.adresseType != o.adresseType) {
            return false
        }
        if (this.adresseGeometrie != o.adresseGeometrie) {
            return false
        }
        return true
    }

    override fun hashCode(): Int {
        val prime = 31
        var result = 1
        result = prime * result + this.adresseId.hashCode()
        result = prime * result + (if (this.adresseDescription == null) 0 else this.adresseDescription.hashCode())
        result = prime * result + this.adresseUtilisateur.hashCode()
        result = prime * result + (if (this.adresseDateConstat == null) 0 else this.adresseDateConstat.hashCode())
        result = prime * result + (if (this.adresseDateModification == null) 0 else this.adresseDateModification.hashCode())
        result = prime * result + this.adresseType.hashCode()
        result = prime * result + this.adresseGeometrie.hashCode()
        return result
    }

    override fun toString(): String {
        val sb = StringBuilder("Adresse (")

        sb.append(adresseId)
        sb.append(", ").append(adresseDescription)
        sb.append(", ").append(adresseUtilisateur)
        sb.append(", ").append(adresseDateConstat)
        sb.append(", ").append(adresseDateModification)
        sb.append(", ").append(adresseType)
        sb.append(", ").append(adresseGeometrie)

        sb.append(")")
        return sb.toString()
    }
}
