/*
 * This file is generated by jOOQ.
 */
package remocra.db.jooq.remocra.tables.pojos

import remocra.db.jooq.remocra.enums.TypeGeometry
import java.io.Serializable
import java.util.UUID
import javax.annotation.processing.Generated

/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.19.11",
    ],
    comments = "This class is generated by jOOQ",
)
@Suppress("UNCHECKED_CAST")
data class TypeCriseCategorie(
    val typeCriseCategorieId: UUID,
    val typeCriseCategorieCode: String,
    val typeCriseCategorieLibelle: String,
    val typeCriseCategorieTypeGeometrie: TypeGeometry?,
    val typeCriseCategorieCriseCategorieId: UUID?,
) : Serializable {

    override fun equals(other: Any?): Boolean {
        if (this === other) {
            return true
        }
        if (other == null) {
            return false
        }
        if (this::class != other::class) {
            return false
        }
        val o: TypeCriseCategorie = other as TypeCriseCategorie
        if (this.typeCriseCategorieId != o.typeCriseCategorieId) {
            return false
        }
        if (this.typeCriseCategorieCode != o.typeCriseCategorieCode) {
            return false
        }
        if (this.typeCriseCategorieLibelle != o.typeCriseCategorieLibelle) {
            return false
        }
        if (this.typeCriseCategorieTypeGeometrie == null) {
            if (o.typeCriseCategorieTypeGeometrie != null) {
                return false
            }
        } else if (this.typeCriseCategorieTypeGeometrie != o.typeCriseCategorieTypeGeometrie) {
            return false
        }
        if (this.typeCriseCategorieCriseCategorieId == null) {
            if (o.typeCriseCategorieCriseCategorieId != null) {
                return false
            }
        } else if (this.typeCriseCategorieCriseCategorieId != o.typeCriseCategorieCriseCategorieId) {
            return false
        }
        return true
    }

    override fun hashCode(): Int {
        val prime = 31
        var result = 1
        result = prime * result + this.typeCriseCategorieId.hashCode()
        result = prime * result + this.typeCriseCategorieCode.hashCode()
        result = prime * result + this.typeCriseCategorieLibelle.hashCode()
        result = prime * result + (if (this.typeCriseCategorieTypeGeometrie == null) 0 else this.typeCriseCategorieTypeGeometrie.hashCode())
        result = prime * result + (if (this.typeCriseCategorieCriseCategorieId == null) 0 else this.typeCriseCategorieCriseCategorieId.hashCode())
        return result
    }

    override fun toString(): String {
        val sb = StringBuilder("TypeCriseCategorie (")

        sb.append(typeCriseCategorieId)
        sb.append(", ").append(typeCriseCategorieCode)
        sb.append(", ").append(typeCriseCategorieLibelle)
        sb.append(", ").append(typeCriseCategorieTypeGeometrie)
        sb.append(", ").append(typeCriseCategorieCriseCategorieId)

        sb.append(")")
        return sb.toString()
    }
}
