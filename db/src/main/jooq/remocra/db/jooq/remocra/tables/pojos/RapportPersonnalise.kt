/*
 * This file is generated by jOOQ.
 */
package remocra.db.jooq.remocra.tables.pojos

import remocra.db.jooq.remocra.enums.TypeModule
import java.io.Serializable
import java.util.UUID
import javax.annotation.processing.Generated

/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.19.11",
    ],
    comments = "This class is generated by jOOQ",
)
@Suppress("UNCHECKED_CAST")
data class RapportPersonnalise(
    val rapportPersonnaliseId: UUID,
    val rapportPersonnaliseActif: Boolean,
    val rapportPersonnaliseCode: String,
    val rapportPersonnaliseLibelle: String,
    val rapportPersonnaliseProtected: Boolean,
    val rapportPersonnaliseChampGeometrie: String?,
    val rapportPersonnaliseDescription: String?,
    val rapportPersonnaliseSourceSql: String,
    val rapportPersonnaliseModule: TypeModule,
) : Serializable {

    override fun equals(other: Any?): Boolean {
        if (this === other) {
            return true
        }
        if (other == null) {
            return false
        }
        if (this::class != other::class) {
            return false
        }
        val o: RapportPersonnalise = other as RapportPersonnalise
        if (this.rapportPersonnaliseId != o.rapportPersonnaliseId) {
            return false
        }
        if (this.rapportPersonnaliseActif != o.rapportPersonnaliseActif) {
            return false
        }
        if (this.rapportPersonnaliseCode != o.rapportPersonnaliseCode) {
            return false
        }
        if (this.rapportPersonnaliseLibelle != o.rapportPersonnaliseLibelle) {
            return false
        }
        if (this.rapportPersonnaliseProtected != o.rapportPersonnaliseProtected) {
            return false
        }
        if (this.rapportPersonnaliseChampGeometrie == null) {
            if (o.rapportPersonnaliseChampGeometrie != null) {
                return false
            }
        } else if (this.rapportPersonnaliseChampGeometrie != o.rapportPersonnaliseChampGeometrie) {
            return false
        }
        if (this.rapportPersonnaliseDescription == null) {
            if (o.rapportPersonnaliseDescription != null) {
                return false
            }
        } else if (this.rapportPersonnaliseDescription != o.rapportPersonnaliseDescription) {
            return false
        }
        if (this.rapportPersonnaliseSourceSql != o.rapportPersonnaliseSourceSql) {
            return false
        }
        if (this.rapportPersonnaliseModule != o.rapportPersonnaliseModule) {
            return false
        }
        return true
    }

    override fun hashCode(): Int {
        val prime = 31
        var result = 1
        result = prime * result + this.rapportPersonnaliseId.hashCode()
        result = prime * result + this.rapportPersonnaliseActif.hashCode()
        result = prime * result + this.rapportPersonnaliseCode.hashCode()
        result = prime * result + this.rapportPersonnaliseLibelle.hashCode()
        result = prime * result + this.rapportPersonnaliseProtected.hashCode()
        result = prime * result + (if (this.rapportPersonnaliseChampGeometrie == null) 0 else this.rapportPersonnaliseChampGeometrie.hashCode())
        result = prime * result + (if (this.rapportPersonnaliseDescription == null) 0 else this.rapportPersonnaliseDescription.hashCode())
        result = prime * result + this.rapportPersonnaliseSourceSql.hashCode()
        result = prime * result + this.rapportPersonnaliseModule.hashCode()
        return result
    }

    override fun toString(): String {
        val sb = StringBuilder("RapportPersonnalise (")

        sb.append(rapportPersonnaliseId)
        sb.append(", ").append(rapportPersonnaliseActif)
        sb.append(", ").append(rapportPersonnaliseCode)
        sb.append(", ").append(rapportPersonnaliseLibelle)
        sb.append(", ").append(rapportPersonnaliseProtected)
        sb.append(", ").append(rapportPersonnaliseChampGeometrie)
        sb.append(", ").append(rapportPersonnaliseDescription)
        sb.append(", ").append(rapportPersonnaliseSourceSql)
        sb.append(", ").append(rapportPersonnaliseModule)

        sb.append(")")
        return sb.toString()
    }
}
