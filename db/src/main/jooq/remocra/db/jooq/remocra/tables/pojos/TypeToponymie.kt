/*
 * This file is generated by jOOQ.
 */
package remocra.db.jooq.remocra.tables.pojos

import java.io.Serializable
import java.util.UUID
import javax.annotation.processing.Generated

/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.19.11",
    ],
    comments = "This class is generated by jOOQ",
)
@Suppress("UNCHECKED_CAST")
data class TypeToponymie(
    val typeToponymieId: UUID,
    val typeToponymieActif: Boolean,
    val typeToponymieProtected: Boolean,
    val typeToponymieCode: String,
    val typeToponymieLibelle: String,
) : Serializable {

    override fun equals(other: Any?): Boolean {
        if (this === other) {
            return true
        }
        if (other == null) {
            return false
        }
        if (this::class != other::class) {
            return false
        }
        val o: TypeToponymie = other as TypeToponymie
        if (this.typeToponymieId != o.typeToponymieId) {
            return false
        }
        if (this.typeToponymieActif != o.typeToponymieActif) {
            return false
        }
        if (this.typeToponymieProtected != o.typeToponymieProtected) {
            return false
        }
        if (this.typeToponymieCode != o.typeToponymieCode) {
            return false
        }
        if (this.typeToponymieLibelle != o.typeToponymieLibelle) {
            return false
        }
        return true
    }

    override fun hashCode(): Int {
        val prime = 31
        var result = 1
        result = prime * result + this.typeToponymieId.hashCode()
        result = prime * result + this.typeToponymieActif.hashCode()
        result = prime * result + this.typeToponymieProtected.hashCode()
        result = prime * result + this.typeToponymieCode.hashCode()
        result = prime * result + this.typeToponymieLibelle.hashCode()
        return result
    }

    override fun toString(): String {
        val sb = StringBuilder("TypeToponymie (")

        sb.append(typeToponymieId)
        sb.append(", ").append(typeToponymieActif)
        sb.append(", ").append(typeToponymieProtected)
        sb.append(", ").append(typeToponymieCode)
        sb.append(", ").append(typeToponymieLibelle)

        sb.append(")")
        return sb.toString()
    }
}
